<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAOFpQU7haUHQ4WlB7uFpQe7haUHu4WlB7uFpQe7haUHu4WlB7uFp
        Qe7haUHu4WlB7uFpQe7haUHu4WlB7uFpQe7haUHu4WlB7uFpQe7haUHu4WlB0OFpQU4AAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADhaUE04WlB+uFpQf/haUHQ4WlBiuFpQYLhaUGC4WlBguFp
        QYLhaUGC4WlBguFpQYLhaUGC4WlBguFpQYLhaUGC4WlBguFpQYLhaUGC4WlBiuFpQdDhaUH/4WlB+uFp
        QTQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAOFpQYzhaUH/4WlBnOFpQQIAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA4WlBAuFp
        QZzhaUH/4WlBjAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA4WlBluFpQfbhaUEOAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAA4WlBDuFpQfbhaUGWAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADhaUGW4WlB3AAA
        AAAAAAAAAAAAAOFpQWDhaUGI4WlBFAAAAAAAAAAA4WlBBOFpQXjhaUF44WlBBAAAAAAAAAAA4WlBFOFp
        QYjhaUFgAAAAAAAAAAAAAAAA4WlB3OFpQZYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAOFp
        QZbhaUHaAAAAAAAAAADhaUEu4WlB/+FpQf/haUGUAAAAAAAAAADhaUFg4WlB/+FpQf/haUFgAAAAAAAA
        AADhaUGU4WlB/+FpQf/haUEuAAAAAAAAAADhaUHa4WlBlgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        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
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA4WlB2uFpQZYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAOFp
        QZbhaUHaAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADhaUHa4WlBlgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAA4WlBluFpQdoAAAAAAAAAAAAAAADhaUEQ4WlBNuFpQTbhaUE24WlBNuFpQTbhaUE24WlBNuFp
        QTbhaUE24WlBNuFpQTbhaUE24WlBEAAAAAAAAAAAAAAAAOFpQdrhaUGWAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAADhaUGW4WlB2gAAAAAAAAAA4WlBFOFpQerhaUH/4WlB/+FpQf/haUH/4WlB/+Fp
        Qf/haUH/4WlB/+FpQf/haUH/4WlB/+FpQf/haUHq4WlBFAAAAAAAAAAA4WlB2uFpQZYAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAOFpQZbhaUHaAAAAAAAAAADhaUE+4WlB/+FpQf/haUH/4WlB/+Fp
        Qf/haUH/4WlB/+FpQf/haUH/4WlB/+FpQf/haUH/4WlB/+FpQf/haUE+AAAAAAAAAADhaUHa4WlBlgAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA4WlBluFpQdoAAAAAAAAAAOFpQT7haUH/4WlB/+Fp
        Qf/haUH/4WlB/+FpQf/haUH/4WlB/+FpQf/haUH/4WlB/+FpQf/haUH/4WlB/+FpQT4AAAAAAAAAAOFp
        QdrhaUGWAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADhaUGW4WlB2gAAAAAAAAAA4WlBPuFp
        Qf/haUH/4WlB/+FpQf/haUH/4WlB/+FpQf/haUH/4WlB/+FpQf/haUH/4WlB/+FpQf/haUH/4WlBPgAA
        AAAAAAAA4WlB2uFpQZYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAOFpQZbhaUHaAAAAAAAA
        AADhaUEu4WlB/+FpQf/haUH/4WlB/+FpQf/haUH/4WlB/+FpQf/haUH/4WlB/+FpQf/haUH/4WlB/+Fp
        Qf/haUEuAAAAAAAAAADhaUHa4WlBlgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA4WlBluFp
        QdwAAAAAAAAAAAAAAADhaUFg4WlBluFpQZbhaUGW4WlBluFpQZbhaUGW4WlBluFpQZbhaUGW4WlBluFp
        QZbhaUGW4WlBYAAAAAAAAAAAAAAAAOFpQdzhaUGWAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AADhaUGW4WlB9uFpQQ4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADhaUEO4WlB9uFpQZYAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAOFpQYzhaUH/4WlBnOFpQQIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA4WlBAuFpQZzhaUH/4WlBjAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA4WlBNOFpQfrhaUH/4WlB0OFpQYrhaUGC4WlBguFpQYLhaUGC4WlBguFp
        QYLhaUGC4WlBguFpQYLhaUGC4WlBguFpQYLhaUGC4WlBguFpQYrhaUHQ4WlB/+FpQfrhaUE0AAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA4WlBTuFpQdDhaUHu4WlB7uFpQe7haUHu4WlB7uFp
        Qe7haUHu4WlB7uFpQe7haUHu4WlB7uFpQe7haUHu4WlB7uFpQe7haUHu4WlB7uFpQe7haUHQ4WlBTgAA
        AAAAAAAAAAAAAAAAAAAAAAAA/AAAP/gAAB/x//+P8///z/Pf+8/zjnHP8555z/P//8/z///P8///z/Oe
        ec/zjnHP8555z/P//8/z///P8///z/Oeec/zjnHP8555z/P//8/z///P8///z/OAAc/zgAHP84ABz/OA
        Ac/zgAHP88ADz/P//8/x//+P+AAAH/wAAD8=
</value>
  </data>
</root>